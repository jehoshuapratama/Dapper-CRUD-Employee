@model CRUDDatabaseTutorial.Models.Employee

@{
    ViewData["Title"] = "AddOrEdit";
}

<h2>Add Or Edit Employee</h2>
<hr />
<div class="row">
    <div class="col-md-4">
        <form asp-action="AddOrEdit">
            <div asp-validation-summary="ModelOnly" class="text-danger"></div>
            @Html.HiddenFor(model => Model.Id)
            <div class="form-group">
                <label asp-for="Name" class="control-label"></label>
                <input asp-for="Name" class="form-control" />
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label asp-for="Address" class="control-label"></label>
                <input asp-for="Address" class="form-control" />
                <span asp-validation-for="Address" class="text-danger"></span>
            </div>
            <div class="form-group">
                <label class="control-label">Phone Number</label>
                <input asp-for="PhoneNumber" class="form-control" />
                <span asp-validation-for="PhoneNumber" class="text-danger"></span>
            </div>
            <div>
                <label class="control-label">Division Name</label>
                <select class="form-control" id="DivId" name="DivId">
                    @foreach (var employee in @DapperORM.ReturnDivision<Division>("UpdateDivision"))
                    {
                        <option value="@employee.DivisionId" selected="selected">@employee.DivisionName</option>
                    }
                </select>
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
